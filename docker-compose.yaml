version: '3.8'

services:

  db:
    image: postgres:15.1-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - diploma_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 15
    ports:
      - "5432:5432"

  api:
    build:
      context: .
      target: dev_image
    env_file: .env
    restart: always
    environment:
      POSTGRES_HOST: db
      #DEBUG: False
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      -  ./todolist:/opt/todolist
  collect_static:
    build:
      context:  .
      target: dev_image
    env_file: .env
    entrypoint: ''
    volumes:
      - django_static:/opt/static/
    command: python3 manage.py collectstatic -c --no-input

  frontend:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_started
#      collect_static:
#        condition: service_completed_successully
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/


volumes:
  diploma_pg_data:
  django_static:
